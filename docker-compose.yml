version: "3.8"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3000:3000" # Correct port mapping
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR INTERVAL=500 # Decrease CPU usage by checking every 500ms
    networks:
      - app-network
    volumes:
      - ./api:/app
      - /app/node_modules

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR INTERVAL=500 # Decrease CPU usage by checking every 500ms
    ports:
      - "3002:3002"
    networks:
      - app-network
    volumes:
      - ./payment-service:/app
      - /app/node_modules

  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    container_name: billing-service
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR INTERVAL=500 # Decrease CPU usage by checking every 500ms
    ports:
      - "3004:3004"
    networks:
      - app-network
    volumes:
      - ./billing-service:/app
      - /app/node_modules

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - app-network
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    stdin_open: true
    tty: true

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network
    volumes:
      - type: volume
        source: zksingle-ksingle_broker-data
        target: /var/lib/kafka/data
      - type: volume
        source: zksingle-ksingle_broker-secrets
        target: /etc/kafka/secrets
    container_name: ecommerce-kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    volumes:
      - type: volume
        source: zksingle-ksingle_zookeeper-data
        target: /var/lib/zookeeper/data
      - type: volume
        source: zksingle-ksingle_zookeeper-log
        target: /var/lib/zookeeper/log
      - type: volume
        source: zksingle-ksingle_zookeeper-secrets
        target: /etc/zookeeper/secrets
    container_name: ecommerce-zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - app-network
    container_name: ecommerce-kafka-ui

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  mongodb_data:
  elasticsearch_data:
  zksingle-ksingle_broker-data:
  zksingle-ksingle_broker-secrets:
  zksingle-ksingle_zookeeper-data:
  zksingle-ksingle_zookeeper-log:
  zksingle-ksingle_zookeeper-secrets:
